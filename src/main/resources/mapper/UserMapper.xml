<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.store.mapper.UserMapper">
    <resultMap id="UserEntityMap" type="com.store.entity.User">
        <id property="uid" column="uid" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="CHAR"/>
        <result property="salt" column="salt" jdbcType="CHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="gender" column="gender" jdbcType="INTEGER"/>
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
        <result property="isDelete" column="is_delete" jdbcType="INTEGER"/>
        <result property="createdUser" column="created_user" jdbcType="VARCHAR"/>
        <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
        <result property="modifiedUser" column="modified_user" jdbcType="VARCHAR"/>
        <result property="modifiedTime" column="modified_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!-- 插入用户数据：Integer insert(User user) -->
    <insert id="insert">
        INSERT INTO t_user (username, password, salt, phone, email, gender, avatar, is_delete, created_user,
                            created_time, modified_user, modified_time)
        VALUES (#{username}, #{password}, #{salt}, #{phone}, #{email}, #{gender}, #{avatar}, #{isDelete},
                #{createdUser}, #{createdTime}, #{modifiedUser}, #{modifiedTime})
    </insert>

    <!-- 根据用户名查询用户数据：User findByUsername(String username) -->
    <select id="findByUsername" resultMap="UserEntityMap">
        SELECT *
        FROM t_user
        WHERE username = #{username}
    </select>

    <!-- 根据uid更新用户的密码 -->
    <update id="updatePasswordByUid">
        UPDATE
            t_user
        SET password      = #{password},
            modified_user = #{modifiedUser},
            modified_time = #{modifiedTime}
        WHERE uid = #{uid}
    </update>

    <!-- 根据用户id查询用户数据：User findByUid(Integer uid) -->
    <select id="findByUid" resultMap="UserEntityMap">
        SELECT *
        FROM t_user
        WHERE uid = #{uid}
    </select>

    <update id="updateInfoByUid">
        UPDATE
        t_user
        SET
        <if test="phone != null">phone = #{phone},</if>
        <if test="email != null">email = #{email},</if>
        <if test="gender != null">gender = #{gender},</if>
        modified_user = #{modifiedUser},
        modified_time = #{modifiedTime}
        WHERE
        uid = #{uid}
    </update>
    <update id="updateAvatarByUid">
        update t_user
        set avatar=#{avatar},
            modified_user=#{modifiedUser},
            modified_time=#{modifiedTime}
        where uid = #{uid}
    </update>

</mapper>